package com.example.myapplication

import android.app.NotificationChannel
import android.app.NotificationManager
import android.app.PendingIntent
import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import android.os.Build
import androidx.core.app.NotificationCompat
import androidx.core.app.NotificationManagerCompat

/**
 * Receiver ƒë∆°n gi·∫£n ƒë·ªÉ nh·∫≠n t√≠n hi·ªáu t·ª´ AlarmManager v√† hi·ªÉn th·ªã th√¥ng b√°o
 */
class NotificationReceiver : BroadcastReceiver() {
    
    companion object {
        private const val CHANNEL_ID = "study_channel"
        private const val NOTIFICATION_ID = 1001
    }
    
    override fun onReceive(context: Context, intent: Intent) {
        // T·∫°o k√™nh th√¥ng b√°o (b·∫Øt bu·ªôc Android 8+)
        createNotificationChannel(context)
        
        // Intent m·ªü app khi b·∫•m th√¥ng b√°o
        val openIntent = Intent(context, MainActivity::class.java).apply {
            flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
        }
        
        val pendingIntent = PendingIntent.getActivity(
            context, 
            0, 
            openIntent, 
            PendingIntent.FLAG_IMMUTABLE or PendingIntent.FLAG_UPDATE_CURRENT
        )
        
        // T·∫°o th√¥ng b√°o
        val notification = NotificationCompat.Builder(context, CHANNEL_ID)
            .setSmallIcon(R.drawable.ic_notification)
            .setContentTitle("ƒê√£ ƒë·∫øn gi·ªù h·ªçc t·ª´ v·ª±ng! üìö")
            .setContentText("M·ªü app ƒë·ªÉ √¥n l·∫°i t·ª´ h√¥m nay nh√© üí™")
            .setContentIntent(pendingIntent)
            .setAutoCancel(true)
            .setPriority(NotificationCompat.PRIORITY_HIGH)
            .setDefaults(NotificationCompat.DEFAULT_ALL)
            .build()
        
        // Hi·ªÉn th·ªã th√¥ng b√°o
        try {
            NotificationManagerCompat.from(context).notify(NOTIFICATION_ID, notification)
        } catch (e: Exception) {
            // Log error n·∫øu c√≥ v·∫•n ƒë·ªÅ
            android.util.Log.e("NotificationReceiver", "Error showing notification", e)
        }
    }
    
    private fun createNotificationChannel(context: Context) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            val channel = NotificationChannel(
                CHANNEL_ID,
                "Nh·∫Øc h·ªçc t·ª´ v·ª±ng",
                NotificationManager.IMPORTANCE_HIGH
            ).apply {
                description = "Th√¥ng b√°o nh·∫Øc nh·ªü h·ªçc t·ª´ v·ª±ng h√†ng ng√†y"
                enableVibration(true)
                setShowBadge(true)
            }
            
            val notificationManager = context.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
            notificationManager.createNotificationChannel(channel)
        }
    }
}
